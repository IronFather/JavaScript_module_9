// 17 - 8 –ê–°–ò–ù–•–†–û–ù–ù–û–°–¢–¨ –¢–ê–ô–ú–ï–† ----------–†–ï–ü–ï–¢–ê----------------

// 17 - 8  setTimeout ----------–†–ï–ü–ï–¢–ê----------------
// console.log('–î–æ –≤—ã–∑–æ–≤–∞ setTimeout');


// setTimeout((x) => {
//     console.log(x);
// }, 2000, 5);

// setTimeout((y) => {
//     console.log(y);
// }, 1000, 10);

// console.log('–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ setTimeout');

// /*
//  * –û—á–∏—Å—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–∞ —Å clearTimeout(timeoutId)
//  */

// const logger = time => {
//     console.log(`–õ–æ–≥ —á–µ—Ä–µ–∑ ${time}ms, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–µ –æ—Ç–º–µ–Ω–∏–ª–∏ —Ç–∞–π–º–∞—É—Ç`);
//   };
  
//  const timerId = (() => setTimeout(logger, 5000, 5000));
  
//  timerId();
 
//   console.log(timerId);

//   console.log('—á—Ç–æ –±—É–¥–µ—Ç?');
  
//   const shouldCancelTimer = Math.random() > 0.3;
//   console.log(shouldCancelTimer);
  
//   if (shouldCancelTimer) {
//     clearTimeout(timerId);
//   }

// 17 - 8  setInterval ----------–†–ï–ü–ï–¢–ê----------------

/*
 * –ú–µ—Ç–æ–¥ setInterval(callback, delay, args)
 */

// const logger = time => console.log(`–õ–æ–≥ –∫–∞–∂–¥—ã–µ ${time}ms - ${Date.now()}`);

// console.log('–î–æ –≤—ã–∑–æ–≤–∞ setInterval');
// setInterval(logger, 2000, 2000);
// console.log('–ü–æ—Å–ª–µ –≤—ã–∑–æ–≤–∞ setInterval');

/*
 * –û—á–∏—Å—Ç–∫–∞ –∏–Ω—Ç–µ—Ä–≤–∞–ª–∞ —Å clearInterval(intervalId)
 */

// const intervalId = setInterval(logger, 2000, 2000);
// const shouldCancelInterval = Math.random() > 0.2;
// console.log(shouldCancelInterval);

// if (shouldCancelInterval) {
//   clearInterval(intervalId);
// }



// 17 - 8  notification ----------–†–ï–ü–ï–¢–ê----------------

/**
 * - –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏ —Å–∫—Ä—ã–≤–∞–µ–º –¥–æ–±–∞–≤–ª—è—è/—É–¥–∞–ª—è—è –∫–ª–∞—Å—Å is-visible
 * - –°–∫—Ä—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–µ –≤—Ä–µ–º—è
 * - –°–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏ –∫–ª–∏–∫–µ
 * - –ù–µ –∑–∞–±—ã–≤–∞–µ–º —á–∏—Å—Ç–∏—Ç—å —Ç–∞–π–º–µ—Ä
 */

//  const NOTIFICATION_DELAY = 5000;
//  let timeoutId = null;
//  const refs = {
//    notification: document.querySelector('.js-alert'),
//  };
 
// window.addEventListener(`click`, () => {
//   showNotification();
// })

//  refs.notification.addEventListener('click', onNotificationClick);
 

 
 /*
  * –§—É–Ω–∫—Ü–∏–∏
  */
//  function onNotificationClick() {
//    hideNotification();
//    clearTimeout(timeoutId);
//  }

//  function showNotification() {
//    refs.notification.classList.add('is-visible');

//    timeoutId = setTimeout(() => {
//      console.log('–ó–∞–∫—Ä—ã–≤–∞–µ–º –∞–ª–µ—Ä—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —á—Ç–æ–±—ã –Ω–µ –≤–∏—Å–µ–ª');
//      hideNotification();
//    }, NOTIFICATION_DELAY);
//  }
 
//  refs.notification.addEventListener('mousemove', Close);

//  function Close() {
//   hideNotification();
// }

//  function hideNotification() {
//   refs.notification.classList.remove('is-visible');
// }

// 17 - 8  subscription ----------–†–ï–ü–ï–¢–ê----------------

// const DELAY = 2000;
// const MAX_MODAL = 3;

// let intervalId = null;
// let logInterval = 0;
// let isSubscripted = false;

// intervalId = setInterval(() => {

//   logInterval +=1;
//   console.log(`—â–µ –æ–¥–Ω—É –ª–æ–∂–∫—É!`);
//   console.log(logInterval);

//   if(logInterval === MAX_MODAL || isSubscripted) {
//     clearInterval(intervalId);
//   }
// }, 2000);

// _____________________________________________________

// import BSN from 'bootstrap.native';

// const refs = {
//   modal: document.querySelector('#subscription-modal'),
//   subscribeBtn: document.querySelector('button[data-subscribe]'),
// };

// const PROMPT_DELAY = 3000;
// const MAX_PROMPT_ATTEMPTS = 3;
// let promptCounter = 0;
// let hasSubscribed = false;
// const modal = new BSN.Modal('#subscription-modal');

// openModal();

// refs.modal.addEventListener('hide.bs.modal', openModal);
// refs.subscribeBtn.addEventListener('click', onSubscribeBtnClick);

// function openModal() {
//   if (promptCounter === MAX_PROMPT_ATTEMPTS || hasSubscribed) {
//     console.log('–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª-–≤–æ –Ω–∞–¥–æ–µ–¥–∞–Ω–∏–π –∏–ª–∏ –ø–æ–¥–ø–∏—Å–∞–ª—Å—è');
//     return;
//   }

//   setTimeout(() => {
//     console.log('–û—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–∞–¥–æ–µ–¥–∞–ª–∫—É');
//     modal.show();
//     promptCounter += 1;
//   }, PROMPT_DELAY);
// }

// function onSubscribeBtnClick() {
//   hasSubscribed = true;
//   modal.hide();
// }


// 17 - 8  date ----------–†–ï–ü–ï–¢–ê----------------

/*
 - –°–æ–∑–¥–∞–Ω–∏–µ
 - Unix-–≤—Ä–µ–º—è
 - –ú–µ—Ç–æ–¥—ã
 - –†–∞–∑–Ω–∏—Ü–∞ –≤—Ä–µ–º–µ–Ω–∏
 - Date.now()
*/

// const date1 = Date.now();

// setTimeout(() => {
//   const date2 = Date.now();

//   console.log(date1);
//   console.log(date2);
//   console.log((date2 - date1));

// }, 4000);

// const timer = {
//   start() {
//     const startTime = Date.now();

//     setInterval(() => {
//       const currentTime = Date.now();
//       const deltaTime = currentTime - startTime;
//       const timerComponent = getTimerComponent;
//     }, 1000)
//   }
// }

// timer.start();

// function getTimerComponent() {

// }



// function clockFace({hours, minuts, seconds}) {

// }
// _______________________________________________

// const date1 = Date.now();
// console.log('date1', date1);

// setTimeout(() => {
//   const date2 = Date.now();

//   console.log('date1', date1);
//   console.log('date2', date2);

//   console.log(date2 - date1);
// }, 3000);

// 17 - 8  timer ----------–†–ï–ü–ï–¢–ê----------------

// const refs = {
//   startBtn: document.querySelector('button[data-action-start]'),
//   stopBtn: document.querySelector('button[data-action-stop]'),
//   clockface: document.querySelector('.js-clockface'),
// };

// class Timer {
//   constructor({ onTick }) {
//     this.intervalId = null;
//     this.isActive = false;
//     this.onTick = onTick;

//     this.init();
//   }

//   init() {
//     const time = this.getTimeComponents(0);
//     this.onTick(time);
//   }

//   start() {
//     if (this.isActive) {
//       return;
//     }

//     const startTime = Date.now();
//     this.isActive = true;

//     this.intervalId = setInterval(() => {
//       const currentTime = Date.now();
//       const deltaTime = currentTime - startTime;
//       const time = this.getTimeComponents(deltaTime);

//       this.onTick(time);
//     }, 1000);
//   }

//   stop() {
//     clearInterval(this.intervalId);
//     this.isActive = false;
//     const time = this.getTimeComponents(0);
//     this.onTick(time);
//   }

  /*
   * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
   * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
   * - –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—å–µ–∫—Ç —Å–æ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ hours, mins, secs
   * - –ê–¥—Å–∫–∞—è –∫–æ–ø–∏–ø–∞—Å—Ç–∞ —Å–æ stackoverflow üí©
   */
  // getTimeComponents(time) {
  //   const hours = this.pad(
  //     Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))
  //   );
  //   const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));
  //   const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));

  //   return { hours, mins, secs };
  // }

  /*
   * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —á–∏—Å–ª–æ, –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ —Å—Ç—Ä–æ–∫–µ –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –≤ –Ω–∞—á–∞–ª–æ 0 –µ—Å–ª–∏ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ 2-—Ö –∑–Ω–∞–∫–æ–≤
   */
//   pad(value) {
//     return String(value).padStart(2, '0');
//   }
// }

// const timer = new Timer({
//   onTick: updateClockface,
// });

// refs.startBtn.addEventListener('click', timer.start.bind(timer));
// refs.stopBtn.addEventListener('click', timer.stop.bind(timer));

/*
 * - –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –≤—Ä–µ–º—è –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
 * - –í—ã—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Å–∫–æ–ª—å–∫–æ –≤ –Ω–∏—Ö –≤–º–µ—â–∞–µ—Ç—Å—è —á–∞—Å–æ–≤/–º–∏–Ω—É—Ç/—Å–µ–∫—É–Ω–¥
 * - –†–∏—Å—É–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
 */
// function updateClockface({ hours, mins, secs }) {
//   refs.clockface.textContent = `${hours}:${mins}:${secs}`;
// }


// 17 - 8  date ----------–†–ï–ü–ï–¢–ê----------------
// 17 - 8  date ----------–†–ï–ü–ï–¢–ê----------------